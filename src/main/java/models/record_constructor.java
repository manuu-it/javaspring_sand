package models;

//トップレコードとしての定義（アクセス修飾子は「なしor Public」のみ）
public record record_constructor(String name, int age) {
	
	/*コンパクトコンストラクタ:
	 * 
	 * ＜使用目的＞
	 *・入力値の前提条件や不変条件をチェックする」のが一般的
	 * 
	 * ＜処理の流れ＞
	 * コンパイルされると、標準コンストラクタと組み合わさって、１つのコンストラクタになる。
	 * →コンパクトコンストラクタが実行後、標準コンストラクタが実行される。
	 * →標準コンストラクタでフィールドが作成される。
	 * 
	 * ＜ルール＞
	 * ・「public record_constructor」のようにレコード名だけで宣言する。	
	 * ・フィールドにアクセス不可（コンパクトコンストラクタの時点でフィールドが未作成のため）
	 * ・コンストラクタ内にreturnを記述不可（標準コンストラクタが実行されなくなってしまうため）
	 * ・別のコンストラクタを定義不可（別コンストラクタからも標準コンストラクタが呼び出されるため、合計２回呼ばれることになるから）
	 * ・コンパクトコンストラクタは1つしか宣言してはならない（判別できないから）
	 * 
	 */
	
	//「入力値の前提条件や不変条件をチェックする」のが一般的
	public record_constructor{
        // パラメータ 'name' と 'age' は自動的に取り込まれている
        if (name == null || name.isBlank()) {
            throw new IllegalArgumentException("名前はnullまたは空にできません");
        }
        if (age < 0) {
            throw new IllegalArgumentException("年齢は負の場合は指定できません");
        }
        // 明示的な代入処理は不要（自動で行われる）
    }
	
	
}
